service_order:
  - flask-pip
  - flask-poetry
  - flask-pipenv
  - django-pip
  - django-poetry
  - django-pipenv
  - fastapi-pip
  - fastapi-poetry
  - fastapi-pipenv
  - streamlit-pip
  - streamlit-poetry
  - streamlit-pipenv
  - python-poetry
  - python-pipenv
  - python-pip
  - springboot-gradle
  - springboot-maven
  - rails
  - sinatra
  - nextjs
  - preactjs
  - reactjs
  - vuejs
  - ruby
  - golang
  - nodejs
  - java-gradle
  - java-maven
  - static-site

lookup_files:
  - package.json
  - package-lock.json
  - requirements.txt
  - Pipfile.lock
  - pyproject.toml
  - poetry.lock
  - Gemfile
  - Gemfile.lock
  - build.gradle
  - pom.xml
  - go.mod
  - go.sum

services:
  nodejs:
    name: NodeJS
    description: Node JS based web application
  reactjs:
    name: ReactJS
    description: React JS based web application
  nextjs:
    name: NextJS
    description: Next JS based web application
  preactjs:
    name: PreactJS
    description: Preact JS based web application
  vuejs:
    name: VueJS
    description: Vue JS based web application
  flask-pip:
    name: Flask + Pip
    description: Flask based web application with pip
  flask-poetry:
    name: Flask + Poetry
    description: Flask based web application with poetry
  flask-pipenv:
    name: Flask + Pipenv
    description: Flask based web application with pipenv
  django-pip:
    name: Django + Pip
    description: Django based web application with pip
  django-poetry:
    name: Django + Poetry
    description: Django based web application with poetry
  django-pipenv:
    name: Django + Pipenv
    description: Django based web application with pipenv
  fastapi-pip:
    name: FastAPI + Pip
    description: FastAPI based web application with pip
  fastapi-poetry:
    name: FastAPI + Poetry
    description: FastAPI based web application with poetry
  fastapi-pipenv:
    name: FastAPI + Pipenv
    description: FastAPI based web application with pipenv
  streamlit-pip:
    name: Streamlit + Pip
    description: Streamlit based web application with pip
  streamlit-poetry:
    name: Streamlit + Poetry
    description: Streamlit based web application with poetry
  streamlit-pipenv:
    name: Streamlit + Pipenv
    description: Streamlit based web application with pipenv
  python-pip:
    name: Python + Pip
    description: Python based application with pip
  python-poetry:
    name: Python + Poetry
    description: Python based application with poetry
  python-pipenv:
    name: Python + Pipenv
    description: Python based application with pipenv
  sinatra:
    name: Sinatra
    description: Sinatra based web application
  rails:
    name: Rails
    description: Rails based web application
  springboot-gradle:
    name: Spring Boot + Gradle
    description: Spring Boot based web application with Gradle
  springboot-maven:
    name: Spring Boot + Maven
    description: Spring Boot based web application with Maven
  golang:
    name: Golang
    description: Golang based application
  java-gradle:
    name: Java + Gradle
    description: Java based application with Gradle
  java-maven:
    name: Java + Maven
    description: Java based application with Maven
  static-site:
    name: Static Site
    description: Static site [HTML, CSS, JS]
  ruby:
    name: Ruby
    description: Ruby based application

templates:
  sinatra:
    name: ruby.Dockerfile
    variables:
      NODE_MAJOR:
        type: string
        description: Node major version for rails
        default: 18
      INSTALL_COMMAND:
        type: string
        description: Install dependencies
        default: bundle install --without production
      START_COMMAND:
        type: string
        description: Start command for app
        default: ruby app.rb -o '0.0.0.0'
  rails:
    name: ruby.Dockerfile
    variables:
      NODE_MAJOR:
        type: string
        description: Node major version for rails
        default: 18
      INSTALL_COMMAND:
        type: string
        description: Install dependencies
        default: bundle install --without production
      START_COMMAND:
        type: string
        description: Start command for app
        default: bundle exec rails server -p 3000 -b '0.0.0.0'
  ruby:
    name: ruby.Dockerfile
    variables:
      NODE_MAJOR:
        type: string
        description: Node major version for rails
        default: 18
      INSTALL_COMMAND:
        type: string
        description: Install dependencies
        default: bundle install --without production
      START_COMMAND:
        type: string
        description: Start command for app
        default:
  springboot-maven:
    name: java-maven.Dockerfile
    variables:
      DOWNLOAD_DEPENDENCY_COMMAND:
        type: string
        description: Download dependencies
        default: ./mvnw dependency:go-offline
      BUILD_COMMAND:
        type: string
        description: Build command for springboot
        default: ./mvnw clean install
      OUTPUT_JAR_FILE:
        type: string
        description: Output jar file for springboot
        default: app.jar
      START_COMMAND:
        type: string
        description: Start command for springboot
        default: java -jar app.jar
  springboot-gradle:
    name: java-gradle.Dockerfile
    variables:
      DOWNLOAD_DEPENDENCY_COMMAND:
        type: string
        description: Download dependencies
        default: ./gradlew dependencies
      BUILD_COMMAND:
        type: string
        description: Build command for springboot
        default: ./gradlew clean build --exclude-task test
      OUTPUT_JAR_FILE:
        type: string
        description: Output jar file for springboot
        default: app.jar
      START_COMMAND:
        type: string
        description: Start command for springboot
        default: java -jar app.jar
  java-maven:
    name: java-maven.Dockerfile
    variables:
      DOWNLOAD_DEPENDENCY_COMMAND:
        type: string
        description: Download dependencies
        default: ./mvnw dependency:go-offline
      BUILD_COMMAND:
        type: string
        description: Build command for java app
        default: ./mvnw clean install
      OUTPUT_JAR_FILE:
        type: string
        description: Output jar file for java app
        default: app.jar
      START_COMMAND:
        type: string
        description: Start command for java app
        default: java -jar app.jar
  java-gradle:
    name: java-gradle.Dockerfile
    variables:
      DOWNLOAD_DEPENDENCY_COMMAND:
        type: string
        description: Download dependencies
        default: ./gradlew dependencies
      BUILD_COMMAND:
        type: string
        description: Build command for java app
        default: ./gradlew clean build --exclude-task test
      OUTPUT_JAR_FILE:
        type: string
        description: Output jar file for java app
        default: app.jar
      START_COMMAND:
        type: string
        description: Start command for java app
        default: java -jar app.jar
  golang:
    name: golang.Dockerfile
    variables:
      BINARY_NAME: 
        type: string
        description: Name for the golang application (No Space)
        default: app
      CGO_ENABLED:
        type: string
        description: CGO_ENABLED for golang
        default: "0"
      BUILD_COMMAND:
        type: string
        description: Build command for golang app
        default: go build -o app .
      START_COMMAND:
        type: string
        description: Start command for golang app
        default: ./app
  reactjs:
    name: frontend.Dockerfile
    variables:
      SETUP_COMMAND:
        type: string
        description: Setup and install dependencies
        default: npm install
      BUILD_COMMAND:
        type: string
        description: Build command for reactjs
        default: npm run build
      BUILD_DIRECTORY:
        type: string
        description: Build directory for reactjs
        default: dist
  vuejs:
    name: frontend.Dockerfile
    variables:
      SETUP_COMMAND:
        type: string
        description: Setup and install dependencies
        default: npm install
      BUILD_COMMAND:
        type: string
        description: Build command for vuejs
        default: npm run build
      BUILD_DIRECTORY:
        type: string
        description: Build directory for vuejs
        default: dist
  preactjs:
    name: frontend.Dockerfile
    variables:
      SETUP_COMMAND:
        type: string
        description: Setup and install dependencies
        default: npm install
      BUILD_COMMAND:
        type: string
        description: Build command for preactjs
        default: npm run build
      BUILD_DIRECTORY:
        type: string
        description: Build directory for preactjs
        default: dist
  nextjs:
    name: nextjs.Dockerfile
    variables:
      SETUP_COMMAND:
        type: string
        description: Setup and install dependencies
        default: npm install
      BUILD_COMMAND:
        type: string
        description: Build command for nextjs
        default: npm run build
  nodejs:
    name: nodejs.Dockerfile
    variables:
      SETUP_COMMAND:
        type: string
        description: Setup and install dependencies
        default: npm install
      START_COMMAND:
        type: string
        description: Start command for nodejs application
        default: npm run start
  python-pip:
    name: python-pip.Dockerfile
    variables:
      SETUP_COMMAND:
        type: string
        description: Setup and install dependencies
        default: pip install -r requirements.txt
      START_COMMAND:
        type: string
        description: Start command for python app
        default: python main.py
  python-pipenv:
    name: python-pipenv.Dockerfile
    variables:
      SETUP_COMMAND:
        type: string
        description: Setup and install dependencies
        default: pipenv install --dev --system --deploy
      START_COMMAND:
        type: string
        description: Start command for python app
        default: python main.py
  python-poetry:
    name: python-poetry.Dockerfile
    variables:
      POETRY_VERSION:
        type: string
        description: Poetry version
        default: "1.4.2"
      SETUP_COMMAND:
        type: string
        description: Setup and install dependencies
        default: poetry install --no-interaction --no-cache
      START_COMMAND:
        type: string
        description: Start command for python app
        default: poetry run python main.py
  django-pip:
    name: python-pip.Dockerfile
    variables:
      SETUP_COMMAND:
        type: string
        description: Setup and install dependencies
        default: pip install -r requirements.txt
      START_COMMAND:
        type: string
        description: Start command for django app
        default: python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8080
  django-pipenv:
    name: python-pipenv.Dockerfile
    variables:
      SETUP_COMMAND:
        type: string
        description: Setup and install dependencies
        default: pipenv install --dev --system --deploy
      START_COMMAND:
        type: string
        description: Start command for django app
        default: python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8080
  django-poetry:
    name: python-poetry.Dockerfile
    variables:
      POETRY_VERSION:
        type: string
        description: Poetry version
        default: "1.4.2"
      SETUP_COMMAND:
        type: string
        description: Setup and install dependencies
        default: poetry install --no-interaction --no-cache
      START_COMMAND:
        type: string
        description: Start command for django app
        default: poetry run python manage.py makemigrations && poetry run python manage.py migrate && poetry run python manage.py runserver 0.0.0.0:8080
  flask-pip:
    name: python-pip.Dockerfile
    variables:
      SETUP_COMMAND:
        type: string
        description: Setup and install dependencies
        default: pip install -r requirements.txt
      START_COMMAND:
        type: string
        description: Start command for flask app
        default: python main.py
  flask-pipenv:
    name: python-pipenv.Dockerfile
    variables:
      SETUP_COMMAND:
        type: string
        description: Setup and install dependencies
        default: pipenv install --dev --system --deploy
      START_COMMAND:
        type: string
        description: Start command for flask app
        default: python main.py
  flask-poetry:
    name: python-poetry.Dockerfile
    variables:
      POETRY_VERSION:
        type: string
        description: Poetry version
        default: "1.4.2"
      SETUP_COMMAND:
        type: string
        description: Setup and install dependencies
        default: poetry install --no-interaction --no-cache
      START_COMMAND:
        type: string
        description: Start command for flask app
        default: poetry run python main.py
  fastapi-poetry:
    name: python-poetry.Dockerfile
    variables:
      POETRY_VERSION:
        type: string
        description: Poetry version
        default: "1.4.2"
      SETUP_COMMAND:
        type: string
        description: Setup and install dependencies
        default: poetry install --no-interaction --no-cache
      START_COMMAND:
        type: string
        description: Start command for fastapi app
        default: poetry run uvicorn main:app --host 0.0.0.0 --port 8080 --workers 3
  fastapi-pip:
    name: python-pip.Dockerfile
    variables:
      SETUP_COMMAND:
        type: string
        description: Setup and install dependencies
        default: pip install -r requirements.txt
      START_COMMAND:
        type: string
        description: Start command for streamlit app
        default: uvicorn main:app --host 0.0.0.0 --port 8080 --workers 3
  fastapi-pipenv:
    name: python-pipenv.Dockerfile
    variables:
      SETUP_COMMAND:
        type: string
        description: Setup and install dependencies
        default: pipenv install --dev --system --deploy
      START_COMMAND:
        type: string
        description: Start command for streamlit app
        default: uvicorn main:app --host 0.0.0.0 --port 8080 --workers 3
  streamlit-poetry:
    name: python-poetry.Dockerfile
    variables:
      POETRY_VERSION:
        type: string
        description: Poetry version
        default: "1.4.2"
      SETUP_COMMAND:
        type: string
        description: Setup and install dependencies
        default: poetry install --no-interaction --no-cache
      START_COMMAND:
        type: string
        description: Start command for streamlit app
        default: poetry run streamlit run main.py --server.port 8080
  streamlit-pip:
    name: python-pip.Dockerfile
    variables:
      SETUP_COMMAND:
        type: string
        description: Setup and install dependencies
        default: pip install -r requirements.txt
      START_COMMAND:
        type: string
        description: Start command for streamlit app
        default: streamlit run main.py --server.port 8080
  streamlit-pipenv:
    name: python-pipenv.Dockerfile
    variables:
      SETUP_COMMAND:
        type: string
        description: Setup and install dependencies
        default: pipenv install --dev --system --deploy
      START_COMMAND:
        type: string
        description: Start command for streamlit app
        default: streamlit run main.py --server.port 8080
  static-site:
    name: static-site.Dockerfile
    variables:

# In the identifiers section, selectors get first priority and then extensions 
identifiers:
  nextjs:
  - extensions:
    selectors:
    - file: package.json
      keywords:
        - next
  preactjs:
  - extensions:
    selectors:
    - file: package.json
      keywords:
        - preact
  reactjs:
  - extensions:
    selectors:
    - file: package.json
      keywords:
        - react
  vuejs:
  - extensions:
    selectors:
    - file: package.json
      keywords:
        - vue
  nodejs:
  - extensions:
    selectors:
    - file: package.json
      keywords:
  python-pip:
  - extensions:
    - py
    selectors:
  - extensions:
    selectors:
    - file: requirements.txt
      keywords:
        - python
  python-pipenv:
  - extensions:
    selectors:
    - file: Pipfile
      keywords:
  - extensions:
    selectors:
    - file: Pipfile.lock
      keywords:
  python-poetry:
  - extensions:
    selectors:
    - file: pyproject.toml
      keywords:
  - extensions:
    selectors:
    - file: poetry.lock
      keywords:
  flask-pip:
  - extensions:
    selectors:
    - file: requirements.txt
      keywords:
        - Flask
  - extensions:
    selectors:
    - file: requirements.txt
      keywords:
        - flask
  flask-pipenv:
  - extensions:
    selectors:
    - file: Pipfile
      keywords:
        - Flask
  - extensions:
    selectors:
    - file: Pipfile
      keywords:
        - flask
  - extensions:
    selectors:
    - file: Pipfile.lock
      keywords:
        - Flask
  - extensions:
    selectors:
    - file: Pipfile.lock
      keywords:
        - flask
  flask-poetry:
  - extensions:
    selectors:
    - file: pyproject.toml
      keywords:
        - Flask
  - extensions:
    selectors:
    - file: pyproject.toml
      keywords:
        - flask
  - extensions:
    selectors:
    - file: poetry.lock
      keywords:
        - Flask
  - extensions:
    selectors:
    - file: poetry.lock
      keywords:
        - flask
  django-pip:
  - extensions:
    selectors:
    - file: requirements.txt
      keywords:
        - Django
  - extensions:
    selectors:
    - file: requirements.txt
      keywords:
        - django
  django-pipenv:
  - extensions:
    selectors:
    - file: Pipfile
      keywords:
        - Django
  - extensions:
    selectors:
    - file: Pipfile
      keywords:
        - django
  - extensions:
    selectors:
    - file: Pipfile.lock
      keywords:
        - Django
  - extensions:
    selectors:
    - file: Pipfile.lock
      keywords:
        - django
  django-poetry:
  - extensions:
    selectors:
    - file: pyproject.toml
      keywords:
        - Django
  - extensions:
    selectors:
    - file: pyproject.toml
      keywords:
        - django
  - extensions:
    selectors:
    - file: poetry.lock
      keywords:
        - Django
  - extensions:
    selectors:
    - file: poetry.lock
      keywords:
        - django
  fastapi-pip:
  - extensions:
    selectors:
    - file: requirements.txt
      keywords:
        - fastapi
  fastapi-pipenv:
  - extensions:
    selectors:
    - file: Pipfile
      keywords:
        - fastapi
  - extensions:
    selectors:
    - file: Pipfile.lock
      keywords:
        - fastapi
  fastapi-poetry:
  - extensions:
    selectors:
    - file: pyproject.toml
      keywords:
        - fastapi
  - extensions:
    selectors:
    - file: poetry.lock
      keywords:
        - fastapi
  streamlit-pip:
  - extensions:
    selectors:
    - file: requirements.txt
      keywords:
        - streamlit
  streamlit-pipenv:
  - extensions:
    selectors:
    - file: Pipfile
      keywords:
        - streamlit
  - extensions:
    selectors:
    - file: Pipfile.lock
      keywords:
        - streamlit
  streamlit-poetry:
  - extensions:
    selectors:
    - file: pyproject.toml
      keywords:
        - streamlit
  - extensions:
    selectors:
    - file: poetry.lock
      keywords:
        - streamlit
  sinatra:
  - extensions:
    selectors:
    - file: Gemfile
      keywords:
        - sinatra
  - extensions:
    selectors:
    - file: Gemfile.lock
      keywords:
        - sinatra
  rails:
  - extensions:
    selectors:
    - file: Gemfile
      keywords:
        - rails
  - extensions:
    selectors:
    - file: Gemfile.lock
      keywords:
        - rails
  springboot-gradle:
  - extensions:
    selectors:
    - file: build.gradle
      keywords:
        - org.springframework
  springboot-maven:
  - extensions:
    selectors:
    - file: pom.xml
      keywords:
        - org.springframework
  golang:
  - extensions:
    - go
    selectors:
    - file: go.mod
      keywords:
        - module
  java-gradle:
  - extensions:
    selectors:
    - file: build.gradle
      keywords:
  java-maven:
  - extensions:
    selectors:
    - file: pom.xml
      keywords:
  ruby:
  - extensions:
    - rb
    selectors:
    - file: Gemfile
      keywords:
  - extensions:
    - rb
    selectors:
    - file: Gemfile.lock
      keywords:
  static-site:
  - extensions:
    - html
    selectors:
  - extensions:
    - css
    selectors: